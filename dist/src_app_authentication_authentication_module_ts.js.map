{"version":3,"file":"src_app_authentication_authentication_module_ts.js","mappings":"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","sources":["./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.component.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/components/auth-layout/auth-layout.component.ts","./src/app/authentication/components/auth-layout/auth-layout.component.html","./src/app/authentication/pages/activate-user/activate-user.component.ts","./src/app/authentication/pages/activate-user/activate-user.component.html","./src/app/authentication/pages/login/login.component.ts","./src/app/authentication/pages/login/login.component.html","./src/app/authentication/pages/register/register.component.ts","./src/app/authentication/pages/register/register.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthenticationComponent } from './authentication.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport {ActivateUserComponent} from './pages/activate-user/activate-user.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthenticationComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent,\n      },\n      {\n        path: 'register',\n        component: RegisterComponent,\n      },\n      {\n        path: 'activate-user/:hash',\n        component: ActivateUserComponent,\n      },\n    ],\n  },\n  {\n    path: '*',\n    loadChildren: () => import('../../app/pages/miscellaneous/miscellaneous.module')\n      .then(m => m.MiscellaneousModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthenticationRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-app-authentication',\r\n  template: '<router-outlet></router-outlet>',\r\n\r\n})\r\nexport class AuthenticationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    return;\r\n  }\r\n// tslint:disable-next-line:no-trailing-whitespace\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AuthenticationComponent } from './authentication.component';\nimport { AuthLayoutComponent } from './components/auth-layout/auth-layout.component';\nimport { NbAlertModule, NbCardModule, NbInputModule, NbLayoutModule, NbSpinnerModule } from '@nebular/theme';\nimport { ActivateUserComponent } from './pages/activate-user/activate-user.component';\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { LoginComponent } from './pages/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {RegisterComponent} from './pages/register/register.component';\n\n\n\n@NgModule({\n  declarations: [\n    AuthenticationComponent,\n    AuthLayoutComponent,\n    ActivateUserComponent,\n    LoginComponent,\n    RegisterComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    NbCardModule,\n    AuthenticationRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NbSpinnerModule,\n    NbLayoutModule,\n    NbInputModule,\n  ],\n})\nexport class AuthenticationModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.scss'],\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    return;\n  }\n\n}\n","<div class=\"login-content\">\n    <div class=\"p-8\">\n        <div class=\"login\">\n          <nb-card appearance=\"outlined\" class=\"login-card\">\n              <ng-content select=\"[authContent]\"></ng-content>\n          </nb-card>\n        </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { DataManipulationService } from '../../../services/data-manipulation.service';\n\n@Component({\n  selector: 'ngx-activate-user',\n  templateUrl: './activate-user.component.html',\n  styleUrls: ['./activate-user.component.scss']\n})\nexport class ActivateUserComponent implements OnInit {\n  hash;\n  error = true;\n  loading = false;\n\n  constructor(private route: ActivatedRoute,\n              private authService: AuthService,\n              private data: DataManipulationService) {\n    this.hash = this.route.snapshot.paramMap.get('hash');\n  }\n\n  ngOnInit(): void {\n    this.activateUser(this.hash);\n  }\n\n  private activateUser(hash) {\n    this.loading = true;\n    this.authService.activateUser(hash).subscribe(res => {\n      this.data.showToast('success', 'User activated with success!', '');\n      this.error = false;\n      this.loading = false;\n    },\n    error => {\n      this.data.showToast('warning', 'Error to activate user.', '');\n      this.loading = false;\n    });\n  }\n\n}\n","<ngx-auth-layout>\n    <div class=\"row\" authContent>\n        <div class=\"col-sm-12 col-md-5 col-lg-5 reset-padding\">\n            <div class=\"image-container h-100\">\n                <img src=\"../../../../../assets/images/dreamer-f90.jpg\" alt=\"login icon\">\n            </div>\n        </div>\n        <div class=\"col-sm-12 col-md-7 col-lg-7 login-column reset-padding\">\n            <div class=\"login-form\">\n                <form>\n                    <ng-container *ngIf=\"loading\">\n                        <ngx-row>\n                            <div rowContent>\n                                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\" style=\"width: 50px; height: 50px; font-size: 30px\"></span>\n                            </div>\n                        </ngx-row>\n                        <ngx-row>\n                            <div rowContent>\n                                <mat-label>Loading...</mat-label>\n                            </div>\n                        </ngx-row>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"error && !loading\">\n                        <ngx-row>\n                            <div rowContent>\n                                <mat-icon class=\"activate-icon\" aria-hidden=\"false\" color=\"warn\" aria-label=\"Example home icon\">warning_amber</mat-icon>\n                            </div>\n                        </ngx-row>\n                        <ngx-row>\n                            <div rowContent>\n                                <mat-label>Your account activation failed!</mat-label>\n                            </div>\n                        </ngx-row>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"!error && !loading\">\n                        <ngx-row>\n                            <div rowContent>\n                                <mat-icon class=\"activate-icon\" aria-hidden=\"false\" aria-label=\"Example home icon\">done</mat-icon>\n                            </div>\n                        </ngx-row>\n\n                        <ngx-row>\n                            <div rowContent>\n                                <mat-label>Your account activated with success!</mat-label>\n                            </div>\n                        </ngx-row>\n                        <ngx-row>\n                            <button mat-raised-button color=\"primary\" class=\"mt-4 mobileFont\" rowContent routerLink=\"/auth/login\">Sign in</button>\n                        </ngx-row>\n                    </ng-container>\n                </form>\n            </div>\n        </div>\n    </div>\n</ngx-auth-layout>\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataManipulationService } from '../../../services/data-manipulation.service';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'ngx-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: UntypedFormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n  hide = true;\n\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private data: DataManipulationService,\n  ) {\n    // redirect to home if already logged in\n    if (this.authService.tokenData) {\n      this.router.navigate(['/pages']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      terms: [true, Validators.requiredTrue]\n    });\n  }\n\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.authService.login(this.f.email.value, this.f.password.value).subscribe(() => {\n          this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/pages';\n          this.router.navigate([this.returnUrl]);\n        },\n        (err) => {\n          // console.log(err);\n          \n          this.data.showToast('warning', 'Error to sign in!', '');\n          this.loading = false;\n        });\n  }\n}\n","<div class=\"center-block\">\n    <div class=\"login-block\">\n      <div class=\"d-flex justify-content-center left\">\n        <img style=\"width:90%;height: 52%;\" src=\"../../../../assets/images/dreamer-f90.jpg\">\n      </div>\n      <div class=\"right\">\n        <div class=\"form-block\">\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n              <h3>Welcome</h3>\n              <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"username\" placeholder=\"Email\"\n                     [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n              <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.email.errors.required\">Username is required</div>\n                <div *ngIf=\"f.email.errors.email\">Username must be a valid email address</div>\n              </div>\n            </div>\n  \n            <div class=\"form-group\">\n              <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Password\"/>\n              <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n              </div>\n            </div>\n  \n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\" id=\"rememberMe\" class=\"custom-control-input\" checked>\n              <label class=\"remember-me-label custom-control-label\" for=\"rememberMe\">Remember me</label>\n            </div>\n  \n            <button type=\"submit\" class=\"btn green-btn\">Log in</button>\n  \n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    return;\n  }\n\n}\n","<p>register works!</p>\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}